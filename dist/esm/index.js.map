{"version":3,"file":"index.js","sources":["../../src/components/password-validator/validators.ts"],"sourcesContent":["export interface IValidator {\n  validate: (value: string) => boolean;\n  errorMessage: string;\n}\n\nexport const LengthValidator = (length: number): IValidator => {\n  return {\n    validate: (input: string) => {\n      return !!input && input.length >= length;\n    },\n    errorMessage: `Password must be at least ${length} characters long`,\n  }\n}\n\nexport const UppercaseValidator: IValidator = {\n  validate: (input: string) => {\n    return /[A-Z]/.test(input)\n  },\n  errorMessage: `Password must contain at least one uppercase letter`,\n}\n\nexport const LowercaseValidator: IValidator = {\n  validate: (input: string) => {\n    return /[a-z]/.test(input)\n  },\n  errorMessage: `Password must contain at least one lowercase letter`,\n}\n\nexport const NumberValidator: IValidator = {\n  validate: (input: string) => {\n    return /\\d/.test(input)\n  },\n  errorMessage: `Password must contain at least one number`,\n}\n\nexport const SpecialCharValidator: IValidator = {\n  validate: (input: string) => {\n    return /[!@#$%^&*()_\\-+={[}\\]|:;\"'<,>.]/.test(input)\n  },\n  errorMessage: `Password must contain at least one special character`,\n}\n"],"names":["LengthValidator","length","validate","input","errorMessage","concat","UppercaseValidator","test","LowercaseValidator","NumberValidator","SpecialCharValidator"],"mappings":"wCAKO,IAAMA,EAAkB,SAACC,GAC9B,MAAO,CACLC,SAAU,SAACC,GACT,QAASA,GAASA,EAAMF,QAAUA,CACnC,EACDG,aAAc,6BAA6BC,OAAAJ,EAAwB,oBAEvE,EAEaK,EAAiC,CAC5CJ,SAAU,SAACC,GACT,MAAO,QAAQI,KAAKJ,EACrB,EACDC,aAAc,uDAGHI,EAAiC,CAC5CN,SAAU,SAACC,GACT,MAAO,QAAQI,KAAKJ,EACrB,EACDC,aAAc,uDAGHK,EAA8B,CACzCP,SAAU,SAACC,GACT,MAAO,KAAKI,KAAKJ,EAClB,EACDC,aAAc,6CAGHM,EAAmC,CAC9CR,SAAU,SAACC,GACT,MAAO,kCAAkCI,KAAKJ,EAC/C,EACDC,aAAc"}