{"version":3,"file":"index.js","sources":["../../src/components/password-validator/validators.ts"],"sourcesContent":["export interface IValidator {\n  validate: (value: string) => boolean;\n  errorMessage: string;\n}\n\nexport const LengthValidator = (length: number): IValidator => {\n  return {\n    validate: (input: string) => {\n      return !!input && input.length >= length;\n    },\n    errorMessage: `Password must be at least ${length} characters long`,\n  }\n}\n\nexport const UppercaseValidator: IValidator = {\n  validate: (input: string) => {\n    return /[A-Z]/.test(input)\n  },\n  errorMessage: `Password must contain at least one uppercase letter`,\n}\n\nexport const LowercaseValidator: IValidator = {\n  validate: (input: string) => {\n    return /[a-z]/.test(input)\n  },\n  errorMessage: `Password must contain at least one lowercase letter`,\n}\n\nexport const NumberValidator: IValidator = {\n  validate: (input: string) => {\n    return /\\d/.test(input)\n  },\n  errorMessage: `Password must contain at least one number`,\n}\n\nexport const SpecialCharValidator: IValidator = {\n  validate: (input: string) => {\n    return /[!@#$%^&*()_\\-+={[}\\]|:;\"'<,>.]/.test(input)\n  },\n  errorMessage: `Password must contain at least one special character`,\n}\n"],"names":["length","validate","input","errorMessage","concat","test"],"mappings":"mFAK+B,SAACA,GAC9B,MAAO,CACLC,SAAU,SAACC,GACT,QAASA,GAASA,EAAMF,QAAUA,CACnC,EACDG,aAAc,6BAA6BC,OAAAJ,EAAwB,oBAEvE,6BAS8C,CAC5CC,SAAU,SAACC,GACT,MAAO,QAAQG,KAAKH,EACrB,EACDC,aAAc,+EAG2B,CACzCF,SAAU,SAACC,GACT,MAAO,KAAKG,KAAKH,EAClB,EACDC,aAAc,0EAGgC,CAC9CF,SAAU,SAACC,GACT,MAAO,kCAAkCG,KAAKH,EAC/C,EACDC,aAAc,mFAzB8B,CAC5CF,SAAU,SAACC,GACT,MAAO,QAAQG,KAAKH,EACrB,EACDC,aAAc"}